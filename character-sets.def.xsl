<?xml version="1.0"?>
<xsl:stylesheet	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
				xmlns:assignments="http://www.iana.org/assignments">
	<xsl:output method="text" indent="no" />
	<xsl:variable name="lwr" select="'abcdefghijklmnopqrstuvwxyz'"/>
	<xsl:variable name="upr" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
	<xsl:template match="/assignments:registry">
		<xsl:text>; Generated by character-sets.def.xsl, except below manual regexp replacements:&#xa;</xsl:text>
		<xsl:text>; Find what: \([^\d]\)0+\(\d+\)&#xa;</xsl:text>
		<xsl:text>; Replace with: \1\2&#xa;</xsl:text>
		<xsl:text>EXPORTS&#xa;</xsl:text>
		<xsl:apply-templates select="assignments:registry"/>
	</xsl:template>
	<xsl:template match="assignments:registry">
		<xsl:apply-templates select="assignments:record"/>
	</xsl:template>
	<xsl:template match="assignments:record">
		<xsl:value-of select="translate(assignments:name, $upr, $lwr)"/>
		<xsl:text> = $</xsl:text>
		<xsl:value-of select="assignments:value"/>
		<xsl:text>&#xa;</xsl:text>
		<xsl:apply-templates select="assignments:alias"/>
	</xsl:template>
	<xsl:template match="assignments:alias">
		<xsl:choose>
			<xsl:when test="contains(.,'&#xa;')">
				<xsl:value-of select="translate(substring-before(., '&#xa;'), $upr, $lwr)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="translate(., $upr, $lwr)"/>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:text> = $</xsl:text>
		<xsl:value-of select="../assignments:value"/>
		<xsl:text>&#xa;</xsl:text>
	</xsl:template>
	<xsl:template match="*">
	</xsl:template>
</xsl:stylesheet>
